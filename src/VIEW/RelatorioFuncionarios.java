package VIEW;

import DAO.EmpresaDAO;
import DAO.FuncionarioDAO;
import Entidade.Empresa;
import Entidade.Funcionario;
import imprimir.SavePDF;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Ademar Zório Neto
 */
public class RelatorioFuncionarios extends javax.swing.JDialog {

    private Date ini, fim;
    public boolean[] atiInati;
    public boolean[] campos;
    private Empresa empresa;

    /**
     * Creates new form RelatorioFuncionarios
     */
    public RelatorioFuncionarios(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/ICON/sgr.png")).getImage());
        carregarCabecalho();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Arquivo PDF", "PDF");
        jFileChooser1.setFileFilter(filtro);
        jFileChooser1.setAcceptAllFileFilterUsed(false);
        addEventoTeclaAtalho();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaRelatorio = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblTexto = new javax.swing.JLabel();
        lblData = new javax.swing.JLabel();
        lblCnpj = new javax.swing.JLabel();
        lblHorario = new javax.swing.JLabel();
        lblRazaoSocial = new javax.swing.JLabel();
        lblTitulo = new javax.swing.JLabel();
        btImprimir = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Relatório de Funcionários");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tabelaRelatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabelaRelatorio);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/logo-small.png"))); // NOI18N
        jLabel1.setToolTipText("");

        lblTexto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTexto.setText("Sistema de Gerenciamento de Restaurantes");
        lblTexto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblData.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblData.setText("##/##/####");
        lblData.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblCnpj.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCnpj.setText("CNPJ: ##.###.###/####-##");
        lblCnpj.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblHorario.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHorario.setText("##:##:##");
        lblHorario.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblRazaoSocial.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRazaoSocial.setText("Razão Social: XXXXXXXXX");
        lblRazaoSocial.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(235, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTexto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCnpj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblRazaoSocial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblData, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(lblHorario)))
                .addGap(5, 5, 5)
                .addComponent(lblTexto)
                .addGap(5, 5, 5)
                .addComponent(lblRazaoSocial)
                .addGap(5, 5, 5)
                .addComponent(lblCnpj)
                .addGap(0, 0, 0))
        );

        lblTitulo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Relatório de Funcionários");
        lblTitulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/ic_print_18pt.png"))); // NOI18N
        btImprimir.setText("Imprimir");
        btImprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btImprimirMouseClicked(evt);
            }
        });

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/ic_cancel_18pt.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btCancelarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTitulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btImprimir)
                        .addGap(10, 10, 10)
                        .addComponent(btCancelar)))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(lblTitulo)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar)
                    .addComponent(btImprimir))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btImprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btImprimirMouseClicked
        jFileChooser1.setCurrentDirectory(new File(System.getProperty("user.home") + "\\Documents\\"));
        if (jFileChooser1.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            new SavePDF().salvar(getParent(), tabelaRelatorio, jFileChooser1,
                    lblTexto.getText(), lblCnpj.getText(), lblRazaoSocial.getText(),
                    lblTitulo.getText(), lblData.getText(), lblHorario.getText(),
                    "/imagem/logo-small.png");
        }
    }//GEN-LAST:event_btImprimirMouseClicked

    private void btCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btCancelarMouseClicked
        if (JOptionPane.showConfirmDialog((Frame) getParent(), "Deseja realmente cancelar?", "Cancelar", 0) == 0) {
            dispose();
        }
    }//GEN-LAST:event_btCancelarMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        btCancelarMouseClicked(null);
    }//GEN-LAST:event_formWindowClosing

    private void carregarCabecalho() {
        empresa = new EmpresaDAO().consultar();
        if (empresa != null) {
            try {
                MaskFormatter maskFormatter = new MaskFormatter("##.###.###/####-##");
                maskFormatter.setValueContainsLiteralCharacters(false);
                lblCnpj.setText("CNPJ: " + maskFormatter.valueToString(empresa.getCnpj()));
                lblRazaoSocial.setText("Razão Social: " + empresa.getRazaoSocial());
            } catch (Exception e) {
                JOptionPane.showMessageDialog((Frame) getParent(), "Ocorreu um erro ao carregar os dados da empresa!");
            }
        } else {
            JOptionPane.showMessageDialog((Frame) getParent(), "Não possui uma empresa cadastrada!");
        }
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat horarioFormat = new SimpleDateFormat("HH:mm:ss");
        lblData.setText(dateFormat.format(new Date()));
        lblHorario.setText(horarioFormat.format(new Date()));
    }

    public void setIni(Date ini) {
        this.ini = ini;
    }

    public void setFim(Date fim) {
        this.fim = fim;
    }

    private void buscar() {
        List<Funcionario> funcionarios = new FuncionarioDAO().consultarPorPeriodo(ini, fim);
        carregarTabela(funcionarios);
    }

    public void setModeloTabela() {
        ArrayList<String> colunas = new ArrayList<String>();
        colunas.add("Código");
        colunas.add("Nome");

        if (campos[2]) {
            colunas.add("CPF");
        }
        if (campos[3]) {
            colunas.add("Cargo");
        }
        if (campos[4]) {
            colunas.add("Salário");
        }
        if (campos[5]) {
            colunas.add("Data Contratação");
        }
        colunas.add("Status");
        boolean[] canEdt = new boolean[colunas.size()];
        for (int i = 0; i < canEdt.length; i++) {
            canEdt[i] = false;
        }
        DefaultTableModel modelo = new DefaultTableModel(null, colunas.toArray()) {
            boolean[] canEdit = canEdt;

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        tabelaRelatorio.setModel(modelo);
        tabelaRelatorio.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tabelaRelatorio.getColumnModel().getColumn(0).setPreferredWidth(73);
        tabelaRelatorio.getColumnModel().getColumn(tabelaRelatorio.getColumnCount() - 1).setPreferredWidth(73);
        int width = ((tabelaRelatorio.getWidth() - 146) / (tabelaRelatorio.getColumnCount() - 2));
        for (int i = 1; i < tabelaRelatorio.getColumnCount() - 1; i++) {
            tabelaRelatorio.getColumnModel().getColumn(i).setPreferredWidth(width);
        }
        tabelaRelatorio.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        buscar();
    }

    private void carregarTabela(List<Funcionario> funcionarios) {
        for (Funcionario f : funcionarios) {
            if ((f.getStatus() && atiInati[0]) || (!f.getStatus() && atiInati[1])) {
                addRow(f);
            }
        }
    }

    private void addRow(Funcionario f) {
        DefaultTableModel modelo = (DefaultTableModel) tabelaRelatorio.getModel();
        ArrayList<Object> lin = new ArrayList<Object>();
        lin.add(f.getPkFuncionario());
        lin.add(f.getNomeFunc());
        if (campos[2] == true) {
            MaskFormatter maskFormatter;
            try {
                maskFormatter = new MaskFormatter("###.###.###-##");
                maskFormatter.setValueContainsLiteralCharacters(false);
                lin.add(maskFormatter.valueToString(f.getCpf()));
            } catch (ParseException ex) {
                Logger.getLogger(RelatorioFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (campos[3]) {
            lin.add(f.getCargo());
        }
        if (campos[4]) {
            String salario = "-";
            if (f.getSalario() != null) {
                salario = new java.text.DecimalFormat("#,##0.00").format(f.getSalario());
            }
            lin.add(salario);
        }
        if (campos[5]) {
            lin.add(new SimpleDateFormat("dd/MM/yyyy").format(f.getDtContratacao()));
        }
        lin.add(f.getStatus() ? "Ativo" : "Inativo");
        Object[] linha = lin.toArray();
        modelo.addRow(linha);
    }

    private void addEventoTeclaAtalho() {
        InputMap inputMap = this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F12, 0), "Imprimir");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("Imprimir", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {
                btImprimir.doClick();
                btImprimirMouseClicked(null);
            }
        });
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "Cancelar");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("Cancelar", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {
                btCancelar.doClick();
                btCancelarMouseClicked(null);
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the SmartLookAndFeel look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.smart.SmartLookAndFeel");
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelatorioFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelatorioFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelatorioFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelatorioFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RelatorioFuncionarios dialog = new RelatorioFuncionarios(new javax.swing.JFrame(), true);
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btImprimir;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblCnpj;
    public javax.swing.JLabel lblData;
    public javax.swing.JLabel lblHorario;
    public javax.swing.JLabel lblRazaoSocial;
    private javax.swing.JLabel lblTexto;
    public javax.swing.JLabel lblTitulo;
    public javax.swing.JTable tabelaRelatorio;
    // End of variables declaration//GEN-END:variables
}
