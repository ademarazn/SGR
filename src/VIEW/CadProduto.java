package VIEW;

import DAO.CategoriaDAO;
import DAO.ProdutoDAO;
import DOCUMENT.FixedLengthDocument;
import Entidade.Categoria;
import Entidade.Produto;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author Ademar Zório Neto
 */
public class CadProduto extends javax.swing.JDialog {

    private Produto produtoSelecionado;
    private List<Categoria> categorias;

    /**
     * Creates new form CadProduto
     */
    public CadProduto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/ICON/sgr.png")).getImage());
        txtConsulta.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        carregarCategorias();
        txtPreco.setFocusLostBehavior(JFormattedTextField.COMMIT);
        ((AbstractDocument) txtNome.getDocument()).setDocumentFilter(new FixedLengthDocument(50, txtNome));
        ((AbstractDocument) txtFornecedor.getDocument()).setDocumentFilter(new FixedLengthDocument(50, txtFornecedor));
        addEventoTeclaAtalho();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        consultar = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        cbFiltro = new javax.swing.JComboBox<>();
        btConsultar1 = new javax.swing.JButton();
        txtConsulta = new JTextFieldPersonalizado.JCTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProduto = new javax.swing.JTable();
        btSelecionar = new javax.swing.JButton();
        btCancelar1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btIncluir = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cbStatus = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cbCategoria = new javax.swing.JComboBox<>();
        txtNome = new JTextFieldPersonalizado.JCTextField();
        txtFornecedor = new JTextFieldPersonalizado.JCTextField();
        txtPreco = new JTextFieldPersonalizado.JCFormattedTextField();
        btNovo = new javax.swing.JButton();
        btConsultar = new javax.swing.JButton();
        btAtiDesat = new javax.swing.JButton();

        consultar.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        consultar.setTitle("Consulta");
        consultar.setResizable(false);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Consulta"));

        jLabel17.setText("Filtro");

        cbFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Nome" }));

        btConsultar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/ic_search_18pt.png"))); // NOI18N
        btConsultar1.setText("Consultar");
        btConsultar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btConsultar1MouseClicked(evt);
            }
        });

        txtConsulta.setPlaceholder("Digite aqui para consultar");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(txtConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btConsultar1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btConsultar1))
                .addGap(10, 10, 10))
        );

        tabelaProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabelaProduto);

        btSelecionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/ic_done_18pt.png"))); // NOI18N
        btSelecionar.setText("Selecionar");
        btSelecionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSelecionarMouseClicked(evt);
            }
        });

        btCancelar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/ic_cancel_18pt.png"))); // NOI18N
        btCancelar1.setText("Cancelar");
        btCancelar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btCancelar1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btCancelar1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSelecionar)
                    .addComponent(btCancelar1))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout consultarLayout = new javax.swing.GroupLayout(consultar.getContentPane());
        consultar.getContentPane().setLayout(consultarLayout);
        consultarLayout.setHorizontalGroup(
            consultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        consultarLayout.setVerticalGroup(
            consultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Produto");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/ic_add_18pt.png"))); // NOI18N
        btIncluir.setText("Incluir");
        btIncluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btIncluirMouseClicked(evt);
            }
        });

        btAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/ic_update_18pt.png"))); // NOI18N
        btAlterar.setText("Alterar");
        btAlterar.setEnabled(false);
        btAlterar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAlterarMouseClicked(evt);
            }
        });

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/ic_cancel_18pt.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btCancelarMouseClicked(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dados Produto"));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("*Categoria");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("*Nome Produto");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("*Preço");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("*Status");

        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Ativo", "Inativo" }));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Fornecedor");

        cbCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione..." }));

        txtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNomeFocusGained(evt);
            }
        });

        txtFornecedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFornecedorFocusGained(evt);
            }
        });

        txtPreco.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbStatus, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbCategoria, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPreco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/ic_fiber_new_18pt.png"))); // NOI18N
        btNovo.setText("Novo");
        btNovo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btNovoMouseClicked(evt);
            }
        });

        btConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/ic_search_18pt.png"))); // NOI18N
        btConsultar.setText("Consultar");
        btConsultar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btConsultarMouseClicked(evt);
            }
        });

        btAtiDesat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/ic_visibility_off_18pt.png"))); // NOI18N
        btAtiDesat.setText("Desativar");
        btAtiDesat.setEnabled(false);
        btAtiDesat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAtiDesatMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btAtiDesat, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btIncluir)
                    .addComponent(btAlterar)
                    .addComponent(btCancelar)
                    .addComponent(btNovo)
                    .addComponent(btConsultar)
                    .addComponent(btAtiDesat))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btIncluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btIncluirMouseClicked
        incluir();
    }//GEN-LAST:event_btIncluirMouseClicked

    private void btAlterarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAlterarMouseClicked
        if (btAlterar.isEnabled()) {
            alterar();
        }
    }//GEN-LAST:event_btAlterarMouseClicked

    private void btCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btCancelarMouseClicked
        if (JOptionPane.showConfirmDialog((Frame) getParent(), "Deseja realmente cancelar?", "Cancelar", 0) == 0) {
            dispose();
        }
    }//GEN-LAST:event_btCancelarMouseClicked

    private void btNovoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btNovoMouseClicked
        if (!txtNome.getText().trim().isEmpty() || !txtPreco.getText().trim().isEmpty()
                || cbCategoria.getSelectedIndex() > 0 || cbStatus.getSelectedIndex() > 0
                || !txtFornecedor.getText().trim().isEmpty()) {
            if (JOptionPane.showConfirmDialog((Frame) getParent(), "Deseja realmente cadastrar um "
                    + "novo produto?", "Novo", 0) == 0) {
                limpar();
                btAlterar.setEnabled(false);
                btAtiDesat.setEnabled(false);
            }
        } else {
            limpar();
        }
        txtNome.requestFocus();
    }//GEN-LAST:event_btNovoMouseClicked

    private void btConsultarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btConsultarMouseClicked
        Dimension d = new Dimension(515, 390);
        tabelaProduto.getParent().setBackground(new java.awt.Color(233, 232, 230));
        consultar.setSize(d);
        consultar.setPreferredSize(d);
        consultar.setResizable(false);
        consultar.setModal(true);
        consultar.setLocationRelativeTo(null);
        cbFiltro.setSelectedIndex(0);
        txtConsulta.setText(null);

        tabelaProduto.setModel(new DefaultTableModel());
        setModeloTabela();
        ProdutoDAO produtoDAO = new ProdutoDAO();
        List<Produto> produtos = produtoDAO.consultarTudoOrdenado(false);
        carregarTabela(produtos);

        consultar.setVisible(true);
    }//GEN-LAST:event_btConsultarMouseClicked

    private void btAtiDesatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAtiDesatMouseClicked
        if (btAtiDesat.isEnabled()) {
            ativarDesativar();
        }
    }//GEN-LAST:event_btAtiDesatMouseClicked

    private void btConsultar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btConsultar1MouseClicked
        consultar();
    }//GEN-LAST:event_btConsultar1MouseClicked

    private void btSelecionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSelecionarMouseClicked
        if (tabelaProduto.getSelectedRow() != -1) {
            limpar();
            int linha = tabelaProduto.getSelectedRow();
            produtoSelecionado = (Produto) new ProdutoDAO()
                    .consultarPorCodigo(Integer
                            .parseInt(tabelaProduto
                                    .getModel()
                                    .getValueAt(linha, 0)
                                    .toString()), false);
            ((AbstractDocument) txtNome.getDocument()).setDocumentFilter(new DocumentFilter());
            txtNome.setText(tabelaProduto.getModel().getValueAt(linha, 1).toString());
            ((AbstractDocument) txtNome.getDocument()).setDocumentFilter(new FixedLengthDocument(50, txtNome));
            cbCategoria.setSelectedItem(tabelaProduto.getModel().getValueAt(linha, 2).toString());
            txtPreco.setValue(Float.valueOf(tabelaProduto.getModel().getValueAt(linha, 3).toString().replace(',', '.')));
            if (tabelaProduto.getModel().getValueAt(linha, 4) != null) {
                ((AbstractDocument) txtFornecedor.getDocument()).setDocumentFilter(new DocumentFilter());
                txtFornecedor.setText(tabelaProduto.getModel().getValueAt(linha, 4).toString());
                ((AbstractDocument) txtFornecedor.getDocument()).setDocumentFilter(new FixedLengthDocument(50, txtFornecedor));
            }
            cbStatus.setSelectedItem(tabelaProduto.getModel().getValueAt(linha, 5).toString());
            btAlterar.setEnabled(true);
            btAtiDesat.setEnabled(true);
            verificarStatus();
            consultar.dispose();
        } else {
            JOptionPane.showMessageDialog((Frame) getParent(), "Selecione um produto na tabela"
                    + " antes de pressionar o botão!",
                    "Mensagem", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btSelecionarMouseClicked

    private void btCancelar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btCancelar1MouseClicked
        consultar.dispose();
    }//GEN-LAST:event_btCancelar1MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        btCancelarMouseClicked(null);
    }//GEN-LAST:event_formWindowClosing

    private void txtNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFocusGained
        txtNome.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_txtNomeFocusGained

    private void txtFornecedorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFornecedorFocusGained
        txtFornecedor.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_txtFornecedorFocusGained

    public void incluir() {
        if (!txtNome.getText().trim().isEmpty() && !txtPreco.getText().trim().isEmpty()
                && cbCategoria.getSelectedIndex() > 0 && cbStatus.getSelectedIndex() > 0) {
            Entidade.Produto produto = new Produto(),
                    pNome;
            pNome = new ProdutoDAO().consultarPorNomeUk(txtNome.getText().trim());
            if (pNome != null) {
                JOptionPane.showMessageDialog((Frame) getParent(), "Esse nome já existe no sistema!",
                        "Atenção", JOptionPane.WARNING_MESSAGE);
                return;
            }

            produto.setNomeProduto(txtNome.getText().trim());
            produto.setCategoria(categorias.get(cbCategoria.getSelectedIndex() - 1));
            try {
                produto.setPreco(Float.parseFloat(txtPreco.getText().replace(".", "").replace(',', '.')));
            } catch (Exception e) {
                JOptionPane.showMessageDialog((Frame) getParent(), "Digite um valor válido para o Preço!");
                return;
            }
            produto.setFornecedor(txtFornecedor.getText().trim());
            if (cbStatus.getSelectedItem().toString().equals("Ativo")) {
                produto.setStatus(true);
            } else {
                produto.setStatus(false);
            }
            try {
                if (JOptionPane.showConfirmDialog((Frame) getParent(), "Deseja realmente incluir o "
                        + "produto?", "Incluir", 0) == 0) {
                    new ProdutoDAO().incluir(produto);
                    JOptionPane.showMessageDialog((Frame) getParent(), "Produto incluído com sucesso!");
                    produtoSelecionado = null;
                    limpar();
                    btAlterar.setEnabled(false);
                    btAtiDesat.setEnabled(false);
                    txtNome.requestFocus();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog((Frame) getParent(), "Não foi possível incluir o produto!\n"
                        + "<html><b>" + e.getClass() + "</html></b>"
                        + "\nContate o desenvolvedor!", "Erro ao incluir", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            verificaCamposVazios();
        }
    }

    public void consultar() {
        setModeloTabela();
        if (!txtConsulta.getText().isEmpty()) {
            ProdutoDAO produtoDAO = new ProdutoDAO();
            String busca = txtConsulta.getText();
            List<Produto> produtos = new ArrayList<>();
            if (cbFiltro.getSelectedIndex() == 0) {
                try {
                    Produto p = produtoDAO.consultarPorCodigo(Integer.parseInt(busca), false);
                    if (p != null) {
                        produtos.add(p);
                    }
                } catch (NumberFormatException erro) {
                    JOptionPane.showMessageDialog((Frame) getParent(), "Digite apenas números para o Código!");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog((Frame) getParent(), "Não foi possível realizar a busca!");
                }
            } else {
                try {
                    produtos = produtoDAO.consultarPorNome(busca, false);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog((Frame) getParent(), "Não foi possível realizar a busca!");
                }
            }
            carregarTabela(produtos);
        }
    }

    public void alterar() {
        if (!txtNome.getText().trim().isEmpty() && !txtPreco.getText().trim().isEmpty()
                && cbCategoria.getSelectedIndex() > 0 && cbStatus.getSelectedIndex() > 0) {
            Entidade.Produto pNome;
            pNome = new ProdutoDAO().consultarPorNomeUk(txtNome.getText().trim());
            if (pNome != null && !produtoSelecionado.getNomeProduto().equals(txtNome.getText().trim())) {
                JOptionPane.showMessageDialog((Frame) getParent(), "Esse nome já existe no sistema!",
                        "Atenção", JOptionPane.WARNING_MESSAGE);
                return;
            }
            produtoSelecionado.setNomeProduto(txtNome.getText().trim());
            produtoSelecionado.setCategoria(categorias.get(cbCategoria.getSelectedIndex() - 1));
            try {
                produtoSelecionado.setPreco(Float.parseFloat(txtPreco.getText().replace(".", "").replace(',', '.')));
            } catch (Exception e) {
                JOptionPane.showMessageDialog((Frame) getParent(), "Digite um valor válido para o Preço!");
                return;
            }
            produtoSelecionado.setFornecedor(txtFornecedor.getText().trim());

            if (cbStatus.getSelectedItem().toString().equals("Ativo")) {
                produtoSelecionado.setStatus(true);
            } else {
                produtoSelecionado.setStatus(false);
            }
            try {
                if (JOptionPane.showConfirmDialog((Frame) getParent(), "Deseja realmente alterar o "
                        + "produto?", "Alterar", 0) == 0) {
                    new ProdutoDAO().alterar(produtoSelecionado);
                    JOptionPane.showMessageDialog((Frame) getParent(), "Produto alterado com sucesso!");
                    produtoSelecionado = null;
                    limpar();
                    btAlterar.setEnabled(false);
                    btAtiDesat.setEnabled(false);
                    txtNome.requestFocus();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog((Frame) getParent(), "Não foi possível alterar o produto!\n"
                        + "<html><b>" + e.getClass() + "</html></b>"
                        + "\nContate o desenvolvedor!", "Erro ao alterar", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog((Frame) getParent(), "Preencha todos os campos "
                    + "obrigatórios!\nMarcados com um asterisco (*)");
        }
    }

    public void ativarDesativar() {
        if (btAtiDesat.isSelected()) {
            if (JOptionPane.showConfirmDialog((Frame) getParent(), "Deseja realmente ativar o "
                    + "produto?", "Ativar", 0) == 0) {
                try {
                    produtoSelecionado.setStatus(true);
                    new ProdutoDAO().alterar(produtoSelecionado);
                    JOptionPane.showMessageDialog((Frame) getParent(), "Produto ativado com sucesso!");
                    cbStatus.setSelectedItem("Ativo");
                    resetFieldColor();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog((Frame) getParent(), "Não foi possível ativar o produto!\n"
                            + "<html><b>" + e.getClass() + "</html></b>"
                            + "\nContate o desenvolvedor!", "Erro ao ativar", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            if (JOptionPane.showConfirmDialog((Frame) getParent(), "Deseja realmente desativar o "
                    + "produto?", "Desativar", 0) == 0) {
                try {
                    produtoSelecionado.setStatus(false);
                    new ProdutoDAO().alterar(produtoSelecionado);
                    JOptionPane.showMessageDialog((Frame) getParent(), "Produto desativado com sucesso!");
                    cbStatus.setSelectedItem("Inativo");
                    resetFieldColor();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog((Frame) getParent(), "Não foi possível desativar o produto!\n"
                            + "<html><b>" + e.getClass() + "</html></b>"
                            + "\nContate o desenvolvedor!", "Erro ao desativar", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        verificarStatus();
    }

    private void setModeloTabela() {
        String[] colunas = new String[]{"Código", "Nome", "Categoria", "Preço",
            "Fornecedor", "Status"};
        DefaultTableModel modelo = new DefaultTableModel(null, colunas) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }

        };
        tabelaProduto.setModel(modelo);
        tabelaProduto.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tabelaProduto.getColumnModel().getColumn(0).setPreferredWidth(73);
        tabelaProduto.getColumnModel().getColumn(1).setPreferredWidth(200);
        tabelaProduto.getColumnModel().getColumn(2).setPreferredWidth(100);
        tabelaProduto.getColumnModel().getColumn(3).setPreferredWidth(75);
        tabelaProduto.getColumnModel().getColumn(4).setPreferredWidth(150);
        tabelaProduto.getColumnModel().getColumn(5).setPreferredWidth(90);
        tabelaProduto.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    private void carregarTabela(List<Produto> produtos) {
        DefaultTableModel modelo = (DefaultTableModel) tabelaProduto.getModel();
        for (Produto p : produtos) {
            Object[] linha = new Object[]{
                p.getPkProduto(),
                p.getNomeProduto(),
                p.getCategoria().getNomeCategoria(),
                p.getPreco().toString().replace('.', ','),
                p.getFornecedor(),
                p.getStatus() ? "Ativo" : "Inativo"
            };
            modelo.addRow(linha);
        }
    }

    private void carregarCategorias() {
        categorias = new CategoriaDAO().consultarTudoOrdenado();
        cbCategoria.removeAllItems();
        cbCategoria.addItem("Selecione...");
        for (Categoria c : categorias) {
            cbCategoria.addItem(c.getNomeCategoria());
        }
    }

    private void verificarStatus() {
        if (cbStatus.getSelectedItem().toString().equals("Ativo")) {
            btAtiDesat.setSelected(false);
            btAtiDesat.setText("Desativar");
            btAtiDesat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/ic_visibility_off_18pt.png")));
        } else {
            btAtiDesat.setSelected(true);
            btAtiDesat.setText("Ativar");
            btAtiDesat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICON/ic_visibility_18pt.png")));
        }
    }

    private void limpar() {
        try {
            txtNome.getDocument().remove(0, txtNome.getDocument().getLength());
            txtFornecedor.getDocument().remove(0, txtFornecedor.getDocument().getLength());
        } catch (BadLocationException ex) {
            Logger.getLogger(CadProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
        cbCategoria.setSelectedIndex(0);
        txtPreco.setValue(null);
        txtPreco.setText(null);
        cbStatus.setSelectedIndex(0);
        produtoSelecionado = null;
        resetFieldColor();
    }

    private void verificaCamposVazios() {
        if (txtNome.getText().trim().isEmpty()) {
            txtNome.setBackground(new java.awt.Color(255, 155, 155));
        }
        if (txtPreco.getText().trim().isEmpty()) {
            txtPreco.setBackground(new java.awt.Color(255, 155, 155));
        }
        if (cbCategoria.getSelectedIndex() <= 0) {
            cbCategoria.setBackground(new java.awt.Color(255, 155, 155));
        }
        if (cbStatus.getSelectedIndex() <= 0) {
            cbStatus.setBackground(new java.awt.Color(255, 155, 155));
        }
        JOptionPane.showMessageDialog((Frame) getParent(), "Preencha o(s) campo(s) em vermelho!");
    }

    private void resetFieldColor() {
        txtNome.setBackground(new java.awt.Color(255, 255, 255));
        cbCategoria.setBackground(new java.awt.Color(255, 255, 255));
        txtPreco.setBackground(new java.awt.Color(255, 255, 255));
        cbStatus.setBackground(new java.awt.Color(255, 255, 255));
    }

    private void addEventoTeclaAtalho() {
        InputMap inputMap = this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F1, 0), "Consultar");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("Consultar", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {
                btConsultar.doClick();
                btConsultarMouseClicked(null);
            }
        });
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0), "Novo");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("Novo", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {
                btNovo.doClick();
                btNovoMouseClicked(null);
            }
        });
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F3, 0), "Incluir");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("Incluir", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {
                btIncluir.doClick();
                btIncluirMouseClicked(null);
            }
        });
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F4, 0), "Alterar");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("Alterar", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {
                btAlterar.doClick();
                btAlterarMouseClicked(null);
            }
        });
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0), "AtiDesat");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("AtiDesat", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {
                btAtiDesat.doClick();
                btAtiDesatMouseClicked(null);
            }
        });
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "Cancelar");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("Cancelar", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {
                btCancelar.doClick();
                btCancelarMouseClicked(null);
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the SmartLookAndFeel look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.smart.SmartLookAndFeel");
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CadProduto dialog = new CadProduto(new javax.swing.JFrame(), true);
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btAtiDesat;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btCancelar1;
    private javax.swing.JButton btConsultar;
    private javax.swing.JButton btConsultar1;
    private javax.swing.JButton btIncluir;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btSelecionar;
    private javax.swing.JComboBox<String> cbCategoria;
    private javax.swing.JComboBox<String> cbFiltro;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JDialog consultar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaProduto;
    private JTextFieldPersonalizado.JCTextField txtConsulta;
    private JTextFieldPersonalizado.JCTextField txtFornecedor;
    private JTextFieldPersonalizado.JCTextField txtNome;
    private JTextFieldPersonalizado.JCFormattedTextField txtPreco;
    // End of variables declaration//GEN-END:variables
}
